apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        # vault.hashicorp.com/auth-type: "approle"  # ou "approle"
        # vault.hashicorp.com/auth-config: "{{ .Values.vaultAuthRef }}"
        vault.hashicorp.com/role: "{{ .Values.vaultRole }}"
        # Configuration du secret à récupérer
        vault.hashicorp.com/agent-inject-secret-db-secrets.txt: "{{ .Values.vaultSecretMount }}/{{ .Values.vaultSecretPath }}"
        # Template de transformation du secret
        vault.hashicorp.com/agent-inject-template-db-secrets.txt: |
          {{ `{{- with secret `}} {{ .Values.vaultSecretMount }}/{{ .Values.vaultSecretPath }} {{`-}}
          {
              postgres://{{ .Data.username }}:{{ .Data.password }}@postgres:5432/mydb?sslmode=disable
          }
          {{- end }} `}}
    spec:
      containers:
        - name: app
          image: nginx:1-alpine-perl
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "250m"
          # volumeMounts:
          #   - name: vault-secrets
          #     mountPath: /vault/secrets
          #     readOnly: true